library(readxl)
Covid_19_Dataset <- read_excel("C:/Users/KAI JING/Desktop/Covid-19 Dataset.xlsx")
View(Covid_19_Dataset)
library(readxl)
State_Update_Cases <- read_excel("C:/Users/KAI JING/Desktop/State Update Cases.xlsx")
View(State_Update_Cases)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "Covid-19 Malaysia"),
dashboardSidebar(
img(src = "Capture.PNG", align = "center"),
sidebarMenu(
menuItem("Home Page", tabName = "home", icon = icon("home")),
menuItem("State in Malaysia", tabName = "state", icon = icon("flag-checkered")),
menuItem("Symptoms of Covid-19", tabName = "symptoms", icon = icon("hand-holding-medical"))
)
),
dashboardBody(
tabItems(
tabItem("home",
#div(p("State in Malaysia")),
box(plotOutput("correlation_plot"), width =8),
box(
selectInput("malaysia_status","Malaysia Covid-19 Status:",
c("Total Cases","Daily New Cases","Active Cases","Total Deaths","Daily Deaths")), width = 4
)
),
tabItem("state",
fluidPage(
h2("State in Malaysia"),
dataTableOutput("state_cases")
)
)
)
)
)
#Where application logic lives
server <- function(input,output){
output$correlation_plot <- renderPlot({
plot(Covid_19_Dataset$Date,Covid_19_Dataset[[input$malaysia_status]],
xlab = "Date", ylab = "Covid-19 Cases")
})
output$state_cases <- renderDataTable(State_Update_Cases)
}
#Combine UI + server into a Shiny app and run it
shinyApp(ui = ui, server = server)
#Combine UI + server into a Shiny app and run it
shinyApp(ui = ui, server = server)
#Combine UI + server into a Shiny app and run it
shinyApp(ui = ui, server = server)
#Where application logic lives
server <- function(input,output){
output$correlation_plot <- renderPlot({
plot(Covid_19_Dataset$Date,Covid_19_Dataset[[input$malaysia_status]],
xlab = "Date", ylab = "Covid-19 Cases")
})
output$state_cases <- renderDataTable(State_Update_Cases)
}
#Combine UI + server into a Shiny app and run it
shinyApp(ui = ui, server = server)
server<- function(input,output){
}
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody(),
)
runApp()
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
library(readxl)
Selangor <- read_excel("C:/Users/KAI JING/Desktop/Selangor.xlsx")
View(Selangor)
library(shiny); runApp('bisco-19.R')
View(Selangor)
View(Selangor)
View(Selangor)
View(Selangor)
library(readxl)
Selangor <- read_excel("C:/Users/KAI JING/Desktop/Selangor.xlsx")
View(Selangor)
View(Selangor)
View(State_Update_Cases)
View(Selangor)
View(Covid_19_Dataset)
runApp('bisco-19.R')
install.packages("RODBC")
install.packages("DBI")
install.packages("odbc")
install.packages("RMySQL")
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
YES
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
mydb <- dbConnect(MySQL(),
user = 'techvest_covidAdmin',
password = 'gRBOp;$[F[!g',
dbname = 'techvest_covid',
host = '143.198.217.144'
)
dbListTables(mydb)
dbListFields(mydb,'DAILYCASES')
rs = dbSendQuery(mydb, "SELECT * FROM DAILYCASES")
datatable = fetch (rs, n= -1)
View(datatable())
View(mydb)
View(mydb)
View(rs)
View(datatable)
View(datatable
View(datatable)
mydb <- dbConnect(MySQL(),
user = 'techvest_covidAdmin',
password = 'gRBOp;$[F[!g',
dbname = 'techvest_covid',
host = '143.198.217.144'
)
dbListTables(mydb)
dbListFields(mydb,'DAILYCASES')
rs = dbSendQuery(mydb, "SELECT * FROM DAILYCASES")
datatable = fetch (rs, n= -1)
View(datatable)
View(rs)
View(rs)
View(mydb)
View(mydb)
View(mydb)
library(shiny); runApp('bisco-19.R')
dbListTables(mydb)
dbListFields(mydb,'DAILYCASES')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
library(RMySQL)
mydb <- dbConnect(MySQL(),
user = 'techvest_covidAdmin',
password = 'gRBOp;$[F[!g',
dbname = 'techvest_covid',
host = '143.198.217.144'
)
dbListTables(mydb)
dbListFields(mydb,'DAILYCASES')
rs = dbSendQuery(mydb, "SELECT * FROM DAILYCASES")
datatable = fetch (rs, n= -1)
dbListFields(mydb,'STATECASES')
rs1 = dbSendQuery(mydb, "SELECT * FROM STATECASES")
state_cases_table = fetch (rs1, n= -1)
View(state_cases_table)
View(datatable)
View(datatable)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("reshape2")
View(datatable)
library(shiny); runApp('bisco-19.R')
View(datatable)
View(datatable)
runApp('bisco-19.R')
install.packages("gapminder")
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
install.packages("plotly")
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
print(source('bisco-19.R')$value)
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
install.packages("tidyverse")
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
install.packages("maps")
install.packages("maps")
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
runApp('bisco-19.R')
library(shiny); runApp('bisco-19.R')
